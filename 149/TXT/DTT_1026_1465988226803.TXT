CREATE TABLE FAR_TRN_DEPRECIATION
(
DEPR_ID INTEGER NOT NULL ,
FINANCIAL_YEARS CHARACTER VARYING(32) NULL,
DEPRECIATION_METHOD CHARACTER VARYING(32) NULL,
DPR_ID INTEGER NULL,
ASSET_DTL_ID INTEGER NULL,
BOOK_OPENING NUMERIC(9,2) NULL,
IT_OPENING NUMERIC(9,2) NULL,
IT_DEP_PERCENTAGE NUMERIC(9,2) NULL,
IT_DEP_VALUE NUMERIC(9,2) NULL,
BOOK_CLOSING NUMERIC(9,2) NULL,
IT_CLOSING NUMERIC(9,2) NULL,
BOOK_DEP_PERCENTAGE NUMERIC(9,2) NULL,
BOOK_DEP_VALUE NUMERIC(9,2) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_FAR_TRN_DEPRECIATION
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE FAR_TRN_DEPRECIATION
 ALTER COLUMN DEPR_ID  SET DEFAULT nextval('SEQ_FAR_TRN_DEPRECIATION');


CREATE OR REPLACE FUNCTION TRG_FAR_TRN_DEPRECIATION()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_FAR_TRN_DEPRECIATION=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE FAR_TRN_DEPRECIATION ADD CONSTRAINT FAR_TRN_DEPRECIATION_pkey primary key(DEPR_ID);

 CREATE TRIGGER TRG_HST_FAR_TRN_DEPRECIATION
 BEFORE INSERT OR UPDATE 
 ON FAR_TRN_DEPRECIATION
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE FAR_TRN_DEPRECIATION  DISABLE TRIGGER TRG_HST_FAR_TRN_DEPRECIATION ;
